[
    {
        "id": "af688e5.b55d57",
        "type": "tab",
        "label": "Startup",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eeb0c954.d943d",
        "type": "tab",
        "label": "Agendasturing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ef737c5d.8fdfe",
        "type": "tab",
        "label": "Lichtsturing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b798ba0e.5afac8",
        "type": "tab",
        "label": "Regels",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ac61d6b63edc7d80",
        "type": "tab",
        "label": "Homekit Switches",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8de679a753371272",
        "type": "tab",
        "label": "Shelly sturing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7535b2d2.99fc5c",
        "type": "subflow",
        "name": "set tradfri",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "a0be59d028282e91"
                    },
                    {
                        "id": "b0e14dcefa658091"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "adb7c77aee928dbb",
        "type": "group",
        "z": "ac61d6b63edc7d80",
        "name": "HomeKit Switch",
        "style": {
            "stroke": "#ffC000",
            "label": true
        },
        "nodes": [
            "ab79988be2241e31"
        ],
        "x": 254,
        "y": 59
    },
    {
        "id": "a88344fd46a1a258",
        "type": "group",
        "z": "ac61d6b63edc7d80",
        "name": "Controls",
        "style": {
            "label": true
        },
        "nodes": [
            "cf158bd224a84ae4",
            "200e97d616d139f2"
        ],
        "x": 54,
        "y": 39
    },
    {
        "id": "575b777b8d0ef00f",
        "type": "group",
        "z": "ac61d6b63edc7d80",
        "name": "Output debug",
        "style": {
            "label": true
        },
        "nodes": [
            "120e953ab7375f77",
            "df918f0df9bffdd1"
        ],
        "x": 754,
        "y": 299
    },
    {
        "id": "5f38f820d8f596b6",
        "type": "group",
        "z": "ac61d6b63edc7d80",
        "name": "Controls",
        "style": {
            "label": true
        },
        "nodes": [
            "4c15d28aac408723",
            "de23e2e4d966a81d"
        ],
        "x": 54,
        "y": 199
    },
    {
        "id": "000c7f2afbe57624",
        "type": "group",
        "z": "ac61d6b63edc7d80",
        "name": "HomeKit Switch",
        "style": {
            "stroke": "#ffC000",
            "label": true
        },
        "nodes": [
            "011a13273f3a770e"
        ],
        "x": 254,
        "y": 219
    },
    {
        "id": "006589780663fc45",
        "type": "group",
        "z": "ac61d6b63edc7d80",
        "name": "Controls",
        "style": {
            "label": true
        },
        "nodes": [
            "948aff05f39477c4",
            "0de4b20b1f6c9191"
        ],
        "x": 54,
        "y": 499
    },
    {
        "id": "cec0b675c632c86d",
        "type": "group",
        "z": "ac61d6b63edc7d80",
        "name": "HomeKit Switch",
        "style": {
            "stroke": "#ffC000",
            "label": true
        },
        "nodes": [
            "f6b0fb33851499cd"
        ],
        "x": 254,
        "y": 519
    },
    {
        "id": "e6b5b236f3e727ec",
        "type": "group",
        "z": "ac61d6b63edc7d80",
        "name": "HomeKit Switch",
        "style": {
            "stroke": "#ffC000",
            "label": true
        },
        "nodes": [
            "5d3b03dbb4ea9801"
        ],
        "x": 254,
        "y": 379
    },
    {
        "id": "9c9496ec1aad230d",
        "type": "group",
        "z": "ac61d6b63edc7d80",
        "name": "Controls",
        "style": {
            "label": true
        },
        "nodes": [
            "44d7180ceef89150",
            "9a0d28d3bce71307"
        ],
        "x": 54,
        "y": 359
    },
    {
        "id": "c6c28fc3c88e18f3",
        "type": "group",
        "z": "b798ba0e.5afac8",
        "name": "oude code consultaties",
        "style": {
            "label": true
        },
        "nodes": [
            "4470c5a21720e20c",
            "7e4881a932abecf2"
        ],
        "x": 994,
        "y": 39,
        "w": 352,
        "h": 82
    },
    {
        "id": "9e6e1d597596576f",
        "type": "group",
        "z": "b798ba0e.5afac8",
        "name": "oude code specials",
        "style": {
            "label": true
        },
        "nodes": [
            "7d20fc15db9a8658",
            "2e2c9b336848af0c"
        ],
        "x": 994,
        "y": 139,
        "w": 352,
        "h": 82
    },
    {
        "id": "7b789b02.b3d6e4",
        "type": "position-config",
        "name": "sun test config",
        "isValide": "true",
        "longitude": "0",
        "latitude": "0",
        "angleType": "deg",
        "timeZoneOffset": "99",
        "timeZoneDST": "0",
        "stateTimeFormat": "3",
        "stateDateFormat": "12"
    },
    {
        "id": "61506dc1.940954",
        "type": "ical-config",
        "url": "https://p31-caldav.icloud.com:443/223639751/calendars/351E54A9-85EC-4AD6-A100-0B1435502C5F/",
        "caldav": "icloud",
        "caltype": "icloud",
        "name": "Marieke",
        "replacedates": false,
        "usecache": false,
        "username": "ahartman2@me.com",
        "includeTodo": false,
        "password": "pvcv-lgxl-oguf-ckug",
        "calendar": "",
        "pastWeeks": "",
        "futureWeeks": ""
    },
    {
        "id": "3e48c330.8414ec",
        "type": "ical-config",
        "url": "https://p31-caldav.icloud.com:443/223639751/calendars/83335524-EB3F-44D7-B6A3-E126D258BD63/",
        "caldav": "icloud",
        "caltype": "icloud",
        "name": "Speciallekes",
        "replacedates": false,
        "usecache": false,
        "username": "ahartman2@me.com",
        "includeTodo": false,
        "password": "pvcv-lgxl-oguf-ckug",
        "calendar": "",
        "pastWeeks": "0",
        "futureWeeks": "4"
    },
    {
        "id": "3a720637.38a402",
        "type": "tradfri-config",
        "name": "Tradfri Rodeweg",
        "gatewayHost": "TRADFRI-Gateway-4491602d06e1.local",
        "identity": "tradfri_1633693894750",
        "preSharedKey": "P0OuzdNrErarWkEn"
    },
    {
        "id": "409001a1.3e7a78",
        "type": "homekit-bridge",
        "bridgeName": "Node-RED bridge",
        "pinCode": "123-45-678",
        "port": "",
        "allowInsecureRequest": false,
        "manufacturer": "NRCHKB",
        "model": "Node-RED bridge",
        "serialNo": "1.1.2",
        "firmwareRev": "",
        "hardwareRev": "",
        "softwareRev": "",
        "customMdnsConfig": false,
        "mdnsMulticast": true,
        "mdnsInterface": "",
        "mdnsPort": "",
        "mdnsIp": "",
        "mdnsTtl": "",
        "mdnsLoopback": true,
        "mdnsReuseAddr": true,
        "allowMessagePassthrough": true
    },
    {
        "id": "117d334b145a0072",
        "type": "tradfri-config",
        "name": "Tradfri Felix",
        "gatewayHost": "TRADFRI-Gateway-b8d7af2bba3b.local",
        "identity": "tradfri_1633693847406",
        "preSharedKey": "Es001M9i5JjnxGZm"
    },
    {
        "id": "fd5b71cd.f759d",
        "type": "delay",
        "z": "7535b2d2.99fc5c",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 530,
        "y": 160,
        "wires": [
            [
                "7302852c.5e9e84"
            ]
        ]
    },
    {
        "id": "a38e848f.39acd8",
        "type": "function",
        "z": "7535b2d2.99fc5c",
        "name": "Split payload",
        "func": "let payload = msg.payload\nlet transition = 5\nvar msg0 = msg1 = msg2 = msg3 = null\n\nfunction myFunction(entities) {\n    let brightness = {\n        topic: entities,\n        payload: {\n            transitionTime : transition,\n            brightness: payload.brightness\n        }\n    }\n    let colorTemperature = {\n        topic: entities,\n        payload: {\n            transitionTime : transition,\n            colorTemperature: payload.colorTemperature\n        }\n    }\n    return [colorTemperature, brightness]\n}\n\nif (!payload.hasOwnProperty('brightness') && !payload.hasOwnProperty('colorTemperature')) {\n    \n}\n    \nlet RW = msg.entitiesAll.entitiesRW\nif(RW.length > 0) {\n    [msg0,msg1] = myFunction(RW)\n}\n\nlet F = msg.entitiesAll.entitiesF\nif(F.length > 0) {\n    [msg2,msg3] = myFunction(F)\n}\n\nreturn [msg0,msg1,msg2,msg3]",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 180,
        "wires": [
            [
                "fd5b71cd.f759d"
            ],
            [
                "994c6b54.5d27c8"
            ],
            [
                "355e367fa158c3be"
            ],
            [
                "70e5b7b5463b48c2"
            ]
        ]
    },
    {
        "id": "7302852c.5e9e84",
        "type": "tradfri-light-control",
        "z": "7535b2d2.99fc5c",
        "gateway": "3a720637.38a402",
        "name": "IKEA lights (color)",
        "action": "{}",
        "accessories": [],
        "groups": [],
        "x": 730,
        "y": 160,
        "wires": []
    },
    {
        "id": "994c6b54.5d27c8",
        "type": "tradfri-light-control",
        "z": "7535b2d2.99fc5c",
        "gateway": "3a720637.38a402",
        "name": "IKEA lights (brightness)",
        "action": "{}",
        "accessories": [],
        "groups": [],
        "x": 750,
        "y": 200,
        "wires": []
    },
    {
        "id": "b0e14dcefa658091",
        "type": "rbe",
        "z": "7535b2d2.99fc5c",
        "name": "debounce",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "a38e848f.39acd8",
                "1d763a5420a3fb9c"
            ]
        ]
    },
    {
        "id": "1d763a5420a3fb9c",
        "type": "debug",
        "z": "7535b2d2.99fc5c",
        "name": "IKEA lichten",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 260,
        "wires": []
    },
    {
        "id": "a0be59d028282e91",
        "type": "switch",
        "z": "7535b2d2.99fc5c",
        "name": "restart_lights",
        "property": "switches.restart_lights",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 100,
        "wires": [
            [
                "a38e848f.39acd8",
                "52799f7f7e75939f"
            ]
        ]
    },
    {
        "id": "2e1515e95cf7174a",
        "type": "debug",
        "z": "7535b2d2.99fc5c",
        "name": "IKEA restart",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "52799f7f7e75939f",
        "type": "change",
        "z": "7535b2d2.99fc5c",
        "name": "restart false",
        "rules": [
            {
                "t": "set",
                "p": "switches.restart_lights",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 100,
        "wires": [
            [
                "2e1515e95cf7174a"
            ]
        ]
    },
    {
        "id": "355e367fa158c3be",
        "type": "tradfri-light-control",
        "z": "7535b2d2.99fc5c",
        "gateway": "117d334b145a0072",
        "name": "Felix lights (color)",
        "action": "{}",
        "accessories": [],
        "groups": [],
        "x": 730,
        "y": 260,
        "wires": []
    },
    {
        "id": "70e5b7b5463b48c2",
        "type": "tradfri-light-control",
        "z": "7535b2d2.99fc5c",
        "gateway": "117d334b145a0072",
        "name": "Felix lights (brightness)",
        "action": "{}",
        "accessories": [],
        "groups": [],
        "x": 740,
        "y": 300,
        "wires": []
    },
    {
        "id": "8c783443.62489",
        "type": "inject",
        "z": "af688e5.b55d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 01 * * *",
        "once": false,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "acc78091.ea4ed"
            ]
        ]
    },
    {
        "id": "acc78091.ea4ed",
        "type": "sun-position",
        "z": "af688e5.b55d57",
        "name": "sun %",
        "positionConfig": "7b789b02.b3d6e4",
        "rules": [],
        "onlyOnChange": "true",
        "topic": "",
        "outputs": 1,
        "start": "",
        "startType": "none",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "end": "",
        "endType": "none",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "x": 270,
        "y": 140,
        "wires": [
            [
                "c1cb07db.8f1bf8"
            ]
        ]
    },
    {
        "id": "c1cb07db.8f1bf8",
        "type": "change",
        "z": "af688e5.b55d57",
        "name": "set lighting times",
        "rules": [
            {
                "t": "set",
                "p": "lighting.settings",
                "pt": "global",
                "to": "{\"bulb_max\":4000,\"bulb_min\":2200,\"set_max\":3500,\"set_min\":2500,\"brightness_max\":95,\"brightness_min\":70}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "lighting.times.dawn",
                "pt": "global",
                "to": "payload.times.nauticalDawn.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lighting.times.sunrise",
                "pt": "global",
                "to": "payload.times.sunrise.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lighting.times.sunset",
                "pt": "global",
                "to": "payload.times.sunset.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "lighting.times.dusk",
                "pt": "global",
                "to": "payload.times.nauticalDusk.value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 140,
        "wires": [
            [
                "fe9a3513.4fbe68"
            ]
        ]
    },
    {
        "id": "fe9a3513.4fbe68",
        "type": "debug",
        "z": "af688e5.b55d57",
        "name": "set lighting",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 140,
        "wires": []
    },
    {
        "id": "8a2d9888.d39c1",
        "type": "inject",
        "z": "af688e5.b55d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "acc78091.ea4ed",
                "2b9a42b5d908a3a1"
            ]
        ]
    },
    {
        "id": "72415e18dc28ead0",
        "type": "inject",
        "z": "af688e5.b55d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"onOff\":false}",
        "payloadType": "json",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "a76d2327be262b28"
            ]
        ]
    },
    {
        "id": "3130e6f150af0d5d",
        "type": "inject",
        "z": "af688e5.b55d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"onOff\":true}",
        "payloadType": "json",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "a76d2327be262b28"
            ]
        ]
    },
    {
        "id": "9aac430f6643bd61",
        "type": "suncron",
        "z": "af688e5.b55d57",
        "name": "sun test",
        "lat": "51.3597424",
        "lon": "4.4833742",
        "replay": true,
        "ejectScheduleOnUpdate": false,
        "sunrisePayload": "day",
        "sunrisePayloadType": "str",
        "sunriseTopic": "",
        "sunriseOffsetType": 1,
        "sunriseOffsetHours": 0,
        "sunriseOffsetMinutes": 0,
        "sunriseOffset": 0,
        "sunriseEndPayload": "",
        "sunriseEndPayloadType": "str",
        "sunriseEndTopic": "",
        "sunriseEndOffsetType": 1,
        "sunriseEndOffsetHours": 0,
        "sunriseEndOffsetMinutes": 0,
        "sunriseEndOffset": 0,
        "goldenHourEndPayload": "",
        "goldenHourEndPayloadType": "str",
        "goldenHourEndTopic": "",
        "goldenHourEndOffsetType": 1,
        "goldenHourEndOffsetHours": 0,
        "goldenHourEndOffsetMinutes": 0,
        "goldenHourEndOffset": 0,
        "solarNoonPayload": "",
        "solarNoonPayloadType": "str",
        "solarNoonTopic": "",
        "solarNoonOffsetType": 1,
        "solarNoonOffsetHours": 0,
        "solarNoonOffsetMinutes": 0,
        "solarNoonOffset": 0,
        "goldenHourPayload": "dusk",
        "goldenHourPayloadType": "str",
        "goldenHourTopic": "",
        "goldenHourOffsetType": 1,
        "goldenHourOffsetHours": 0,
        "goldenHourOffsetMinutes": 0,
        "goldenHourOffset": 0,
        "sunsetStartPayload": "",
        "sunsetStartPayloadType": "str",
        "sunsetStartTopic": "",
        "sunsetStartOffsetType": 1,
        "sunsetStartOffsetHours": 0,
        "sunsetStartOffsetMinutes": 0,
        "sunsetStartOffset": 0,
        "sunsetPayload": "",
        "sunsetPayloadType": "str",
        "sunsetTopic": "",
        "sunsetOffsetType": 1,
        "sunsetOffsetHours": 0,
        "sunsetOffsetMinutes": 0,
        "sunsetOffset": 0,
        "duskPayload": "",
        "duskPayloadType": "str",
        "duskTopic": "",
        "duskOffsetType": 1,
        "duskOffsetHours": 0,
        "duskOffsetMinutes": 0,
        "duskOffset": 0,
        "nauticalDuskPayload": "night",
        "nauticalDuskPayloadType": "str",
        "nauticalDuskTopic": "",
        "nauticalDuskOffsetType": 1,
        "nauticalDuskOffsetHours": 0,
        "nauticalDuskOffsetMinutes": 0,
        "nauticalDuskOffset": 0,
        "nightPayload": "",
        "nightPayloadType": "str",
        "nightTopic": "",
        "nightOffsetType": 1,
        "nightOffsetHours": 0,
        "nightOffsetMinutes": 0,
        "nightOffset": 0,
        "nadirPayload": "",
        "nadirPayloadType": "str",
        "nadirTopic": "",
        "nadirOffsetType": 1,
        "nadirOffsetHours": 0,
        "nadirOffsetMinutes": 0,
        "nadirOffset": 0,
        "nightEndPayload": "",
        "nightEndPayloadType": "str",
        "nightEndTopic": "",
        "nightEndOffsetType": 1,
        "nightEndOffsetHours": 0,
        "nightEndOffsetMinutes": 0,
        "nightEndOffset": 0,
        "nauticalDawnPayload": "dawn",
        "nauticalDawnPayloadType": "str",
        "nauticalDawnTopic": "",
        "nauticalDawnOffsetType": 1,
        "nauticalDawnOffsetHours": 0,
        "nauticalDawnOffsetMinutes": 0,
        "nauticalDawnOffset": 0,
        "dawnPayload": "",
        "dawnPayloadType": "str",
        "dawnTopic": "",
        "dawnOffsetType": 1,
        "dawnOffsetHours": 0,
        "dawnOffsetMinutes": 0,
        "dawnOffset": 0,
        "x": 120,
        "y": 40,
        "wires": [
            [
                "38d971fb1f7b5524"
            ]
        ]
    },
    {
        "id": "38d971fb1f7b5524",
        "type": "change",
        "z": "af688e5.b55d57",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "switches.sun_position",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload = \"day\" ? \"off\" : \"on\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sun",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 40,
        "wires": [
            [
                "bdc7e902b18cec4f"
            ]
        ]
    },
    {
        "id": "2b9a42b5d908a3a1",
        "type": "function",
        "z": "af688e5.b55d57",
        "name": "setting switches to defaults",
        "func": "let temp = {\n        bureau_lichtgestuurd : \"on\",\n        felix_lichtgestuurd : \"off\",\n        felix_ontwaaklicht : \"off\",\n        praktijk_agendagestuurd : \"on\",\n        restart_lights : false\n} \n\nlet switches = global.get(\"switches\")\nif (switches ===  undefined) {\n    node.warn('setting switches to defaults')\n    let switches = temp\n    global.set('switches', switches)\n} else {\n    //node.warn('switches OK')\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "bdc7e902b18cec4f",
        "type": "debug",
        "z": "af688e5.b55d57",
        "name": "sun position",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 40,
        "wires": []
    },
    {
        "id": "a76d2327be262b28",
        "type": "tradfri-light-control",
        "z": "af688e5.b55d57",
        "gateway": "3a720637.38a402",
        "name": "Bureau groep",
        "action": "{}",
        "accessories": [
            ""
        ],
        "groups": [
            "131074"
        ],
        "x": 340,
        "y": 280,
        "wires": []
    },
    {
        "id": "3c15aea6.9ea51a",
        "type": "inject",
        "z": "eeb0c954.d943d",
        "name": "ticker",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "*/5 6-22 * * 1,2,3,4,5,6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 120,
        "y": 220,
        "wires": [
            [
                "b42b2b12.faf3b"
            ]
        ]
    },
    {
        "id": "81f98c70.b0533",
        "type": "within-time-switch",
        "z": "eeb0c954.d943d",
        "name": "praktijk",
        "positionConfig": "7b789b02.b3d6e4",
        "startTime": "praktijk.blok_agenda.start",
        "startTimeType": "global",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "endTime": "praktijk.blok_agenda.end",
        "endTimeType": "global",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "timeRestrictions": "",
        "timeRestrictionsType": "none",
        "timeDays": "*",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "propertyStart": "",
        "propertyStartType": "none",
        "propertyStartCompare": "true",
        "propertyStartThreshold": "",
        "propertyStartThresholdType": "num",
        "startTimeAlt": "",
        "startTimeAltType": "entered",
        "startOffsetAlt": 0,
        "startOffsetAltType": "none",
        "startOffsetAltMultiplier": 60000,
        "propertyEnd": "",
        "propertyEndType": "none",
        "propertyEndCompare": "true",
        "propertyEndThreshold": "",
        "propertyEndThresholdType": "num",
        "endTimeAlt": "",
        "endTimeAltType": "entered",
        "endOffsetAlt": 0,
        "endOffsetAltType": "none",
        "endOffsetAltMultiplier": 60000,
        "withinTimeValueType": "msgInput",
        "outOfTimeValueType": "msgInput",
        "tsCompare": "0",
        "x": 680,
        "y": 220,
        "wires": [
            [
                "045d670617a3927f"
            ],
            [
                "8e125b71de7e8d9a"
            ]
        ]
    },
    {
        "id": "839b7938.f219f8",
        "type": "switch",
        "z": "eeb0c954.d943d",
        "name": "gestuurd?",
        "property": "switches.praktijk_agendagestuurd",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 160,
        "wires": [
            [
                "ee26048a.733e3"
            ]
        ]
    },
    {
        "id": "b42b2b12.faf3b",
        "type": "switch",
        "z": "eeb0c954.d943d",
        "name": "gestuurd?",
        "property": "switches.praktijk_agendagestuurd",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 220,
        "wires": [
            [
                "81f98c70.b0533",
                "4c86ca86.4fb114",
                "a03fe1f0.0fa3d"
            ]
        ]
    },
    {
        "id": "e9ecbbb.f2dd548",
        "type": "inject",
        "z": "eeb0c954.d943d",
        "name": "calendar",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "0 6-19 * * 1,2,3,4,5,6",
        "once": true,
        "onceDelay": "0.2",
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "839b7938.f219f8"
            ]
        ]
    },
    {
        "id": "77b7e9a7.922b6",
        "type": "ical-upcoming",
        "z": "eeb0c954.d943d",
        "confignode": "61506dc1.940954",
        "checkall": false,
        "cron": "",
        "timeout": "",
        "timeoutUnits": "seconds",
        "name": "consultaties",
        "offset": "",
        "endpreview": "1",
        "endpreviewUnits": "days",
        "previewtype": "num",
        "preview": "1",
        "previewUnitstype": "previewUnits",
        "previewUnits": "days",
        "pastviewtype": "num",
        "pastview": "1",
        "pastviewUnits": "days",
        "pastviewUnitstype": "pastviewUnits",
        "triggertype": "trigger",
        "trigger": "always",
        "timezone": "",
        "timezonetype": "str",
        "filterProperty": "summary",
        "filterPropertytype": "filterProperty",
        "filterOperator": "between",
        "filterOperatortype": "filterOperator",
        "filtertype": "str",
        "filter2type": "str",
        "filter2": "",
        "filter": "",
        "x": 690,
        "y": 80,
        "wires": [
            [
                "12a621d4.d53bae"
            ]
        ]
    },
    {
        "id": "12a621d4.d53bae",
        "type": "function",
        "z": "eeb0c954.d943d",
        "name": "set agenda",
        "func": "let voorloop = 30\nlet uitloop = 60\nlet praktijk = global.get(\"praktijk\") || {}\nlet blokken = []\nlet blok_inkom = {}\n\n// get calendar events, take out all-day events\nevents = msg.payload.filter(function(event) {\n    return event.allDay !== true\n})\n\nif (events.length > 0){\n    // take out irrelevant properties\n    events = events.map(({eventStart, eventEnd}) => ({eventStart, eventEnd}))\n    // insert voorloop and uitloop\n    events.forEach(function(item, index) {\n        events[index].eventStart.setMinutes(item.eventStart.getMinutes() - voorloop)\n        events[index].eventEnd.setMinutes(item.eventEnd.getMinutes() + uitloop)\n    });\n    \n    blok_inkom.startTime =   events[0].eventStart\n    blok_inkom.endTime =     events[events.length - 1].eventEnd\n    blok_inkom.start =       new Date(blok_inkom.startTime).getTime()\n    blok_inkom.end =         new Date(blok_inkom.endTime).getTime()\n\n    eventStart = events[0].eventStart\n    eventEnd = events[0].eventEnd\n    events.forEach(function(event) {\n        if (event.eventStart > eventEnd) {\n            blokken.push({start: eventStart, end: eventEnd})\n            eventStart = event.eventStart\n        }\n        eventEnd = event.eventEnd\n    });\n    blokken.push({start: eventStart, end: eventEnd})\n    // take out expired events\n    now = new Date()\n    blokken = blokken.filter(function(blok){\n        return blok.end > now\n    })\n}\n\nlet formatter = Intl.DateTimeFormat('nl-BE', { dateStyle: 'short', timeStyle: 'short' })\nif(blokken.length > 0) {\n    temp = blokken[0]\n    blok_agenda = {\n        start:      new Date(temp.start).getTime(),\n        end:        new Date(temp.end).getTime(),\n        startTime:  formatter.format(temp.start),\n        endTime:    formatter.format(temp.end)\n    }\n    msg = {payload: praktijk.blok_agenda}\n} else {\n    start =         new Date().setHours(0,0,0)\n    end =           new Date(start).setHours(0,1,0)\n    startTime =     formatter.format(start)\n    endTime =       formatter.format(end)\n    blok_agenda = {\n        start:      start,\n        end:        end,\n        startTime:  startTime,\n        endTime:    endTime\n    }\n    blok_inkom = blok_agenda\n    msg = {payload: \"geen consultaties\"}\n}\n\npraktijk.blok_agenda = blok_agenda\npraktijk.blok_inkom = blok_inkom\nglobal.set(\"praktijk\", praktijk)\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 80,
        "wires": [
            [
                "d47d72d0efa89966"
            ]
        ]
    },
    {
        "id": "511165e0.f6f50c",
        "type": "ical-upcoming",
        "z": "eeb0c954.d943d",
        "confignode": "3e48c330.8414ec",
        "checkall": false,
        "cron": "",
        "timeout": "",
        "timeoutUnits": "seconds",
        "name": "specials",
        "offset": "",
        "endpreview": "1",
        "endpreviewUnits": "days",
        "previewtype": "num",
        "preview": "1",
        "previewUnitstype": "previewUnits",
        "previewUnits": "days",
        "pastviewtype": "num",
        "pastview": "1",
        "pastviewUnits": "days",
        "pastviewUnitstype": "pastviewUnits",
        "triggertype": "trigger",
        "trigger": "match",
        "timezone": "",
        "timezonetype": "str",
        "filterProperty": "summary",
        "filterPropertytype": "filterProperty",
        "filterOperator": "between",
        "filterOperatortype": "filterOperator",
        "filtertype": "str",
        "filter2type": "str",
        "filter2": "",
        "filter": "oga|raatlamp|rainspotten",
        "x": 680,
        "y": 140,
        "wires": [
            [
                "fe44fb82.fb735"
            ]
        ]
    },
    {
        "id": "fe44fb82.fb735",
        "type": "function",
        "z": "eeb0c954.d943d",
        "name": "set specials",
        "func": "let voorloop = 0\nlet uitloop = 0\nlet praktijk = global.get(\"praktijk\") || {}\nlet blokken = []\nlet blok_special = {}\n\n// get calendar events, take out all-day events\nevents = msg.payload.filter(function(event) {\n    return event.allDay !== true\n})\n\nif (events.length > 0){\n     // take out irrelevant properties\n    events = events.map(({eventStart, eventEnd}) => ({eventStart, eventEnd}))\n\n    eventStart = events[0].eventStart\n    eventEnd   = events[0].eventEnd\n    events.forEach(function(event) {\n        if (event.eventStart > eventEnd) {\n            blokken.push({start: eventStart, end: eventEnd})\n            eventStart = event.eventStart\n        }\n        eventEnd = event.eventEnd\n    });\n    blokken.push({start: eventStart, end: eventEnd})\n\n    // take out expired events\n    now = new Date()\n    blokken = blokken.filter(function(special){\n        return special.end > now\n    })\n}\n\n    let formatter = new Intl.DateTimeFormat('nl-BE', { dateStyle: 'short', timeStyle: 'short' })\n    if(blokken.length > 0) {\n    temp = blokken[0]\n    blok_special = {\n        start:      new Date(temp.start).getTime(),\n        end:        new Date(temp.end).getTime(),\n        startTime:  formatter.format(temp.start),\n        endTime:    formatter.format(temp.end)\n    }\n    msg = {payload: blok_special}\n} else {\n    start =         new Date().setHours(0,0,0)\n    startTime =     formatter.format(start)\n    end =           new Date(start).setHours(0,1,0)\n    endTime =      formatter.format(end)\n    blok_special = {\n        start:      start,\n        end:        end,\n        startTime:  startTime,\n        endTime:    endTime\n    }\n    msg = {payload: \"geen speciallekes\"}\n}\npraktijk.blok_special = blok_special\nglobal.set(\"praktijk\", praktijk)\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 140,
        "wires": [
            [
                "d1568b5c30e7a968"
            ]
        ]
    },
    {
        "id": "a03fe1f0.0fa3d",
        "type": "within-time-switch",
        "z": "eeb0c954.d943d",
        "name": "straatlamp",
        "positionConfig": "7b789b02.b3d6e4",
        "startTime": "praktijk.blok_special.start",
        "startTimeType": "global",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "endTime": "praktijk.blok_special.end",
        "endTimeType": "global",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "timeRestrictions": "",
        "timeRestrictionsType": "none",
        "timeDays": "*",
        "timeOnlyOddDays": true,
        "timeOnlyEvenDays": true,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "propertyStart": "",
        "propertyStartType": "none",
        "propertyStartCompare": "true",
        "propertyStartThreshold": "",
        "propertyStartThresholdType": "num",
        "startTimeAlt": "",
        "startTimeAltType": "entered",
        "startOffsetAlt": 0,
        "startOffsetAltType": "none",
        "startOffsetAltMultiplier": 60000,
        "propertyEnd": "",
        "propertyEndType": "none",
        "propertyEndCompare": "true",
        "propertyEndThreshold": "",
        "propertyEndThresholdType": "num",
        "endTimeAlt": "",
        "endTimeAltType": "entered",
        "endOffsetAlt": 0,
        "endOffsetAltType": "none",
        "endOffsetAltMultiplier": 60000,
        "withinTimeValueType": "msgInput",
        "outOfTimeValueType": "msgInput",
        "tsCompare": "0",
        "x": 690,
        "y": 420,
        "wires": [
            [
                "85ca14534b786f38"
            ],
            [
                "4d682791da068be5"
            ]
        ]
    },
    {
        "id": "960f1791.6227d8",
        "type": "link out",
        "z": "eeb0c954.d943d",
        "name": "agenda uit",
        "links": [
            "58f463f9.95ee4c",
            "f6ad50a3.67911",
            "36e06774.d6558",
            "b1a1ce68.513b2",
            "f3757fdf274d8ea7",
            "333ed6c45f61e718"
        ],
        "x": 1195,
        "y": 220,
        "wires": []
    },
    {
        "id": "959c576d.3ff368",
        "type": "link out",
        "z": "eeb0c954.d943d",
        "name": "special uit",
        "links": [
            "36e06774.d6558",
            "f3757fdf274d8ea7"
        ],
        "x": 1195,
        "y": 420,
        "wires": []
    },
    {
        "id": "ee26048a.733e3",
        "type": "link out",
        "z": "eeb0c954.d943d",
        "name": "calendar uit",
        "links": [
            "950b4130.80c738",
            "5c31d762.1330f"
        ],
        "x": 395,
        "y": 160,
        "wires": []
    },
    {
        "id": "950b4130.80c738",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "calendar in",
        "links": [
            "4bf8966822ea0cf5",
            "ee26048a.733e3"
        ],
        "x": 495,
        "y": 80,
        "wires": [
            [
                "77b7e9a7.922b6",
                "511165e0.f6f50c"
            ]
        ]
    },
    {
        "id": "4c86ca86.4fb114",
        "type": "within-time-switch",
        "z": "eeb0c954.d943d",
        "name": "inkom",
        "positionConfig": "7b789b02.b3d6e4",
        "startTime": "praktijk.blok_inkom.start",
        "startTimeType": "global",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "endTime": "praktijk.blok_inkom.end",
        "endTimeType": "global",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "timeRestrictions": "",
        "timeRestrictionsType": "none",
        "timeDays": "*",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "propertyStart": "",
        "propertyStartType": "none",
        "propertyStartCompare": "true",
        "propertyStartThreshold": "",
        "propertyStartThresholdType": "num",
        "startTimeAlt": "",
        "startTimeAltType": "entered",
        "startOffsetAlt": 0,
        "startOffsetAltType": "none",
        "startOffsetAltMultiplier": 60000,
        "propertyEnd": "",
        "propertyEndType": "none",
        "propertyEndCompare": "true",
        "propertyEndThreshold": "",
        "propertyEndThresholdType": "num",
        "endTimeAlt": "",
        "endTimeAltType": "entered",
        "endOffsetAlt": 0,
        "endOffsetAltType": "none",
        "endOffsetAltMultiplier": 60000,
        "tsCompare": "0",
        "x": 670,
        "y": 320,
        "wires": [
            [
                "98f26ade7c11a000"
            ],
            [
                "dd3dde2108dfccc9"
            ]
        ]
    },
    {
        "id": "1b5162ad.0b52ed",
        "type": "link out",
        "z": "eeb0c954.d943d",
        "name": "inkom uit",
        "links": [
            "fc0d87bf.ee945",
            "64fba6fe8d369fda"
        ],
        "x": 1195,
        "y": 320,
        "wires": []
    },
    {
        "id": "045d670617a3927f",
        "type": "rbe",
        "z": "eeb0c954.d943d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1050,
        "y": 220,
        "wires": [
            [
                "960f1791.6227d8"
            ]
        ]
    },
    {
        "id": "98f26ade7c11a000",
        "type": "rbe",
        "z": "eeb0c954.d943d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1050,
        "y": 320,
        "wires": [
            [
                "1b5162ad.0b52ed"
            ]
        ]
    },
    {
        "id": "4d682791da068be5",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 460,
        "wires": [
            [
                "85ca14534b786f38"
            ]
        ]
    },
    {
        "id": "85ca14534b786f38",
        "type": "rbe",
        "z": "eeb0c954.d943d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1050,
        "y": 420,
        "wires": [
            [
                "959c576d.3ff368"
            ]
        ]
    },
    {
        "id": "dd3dde2108dfccc9",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 360,
        "wires": [
            [
                "98f26ade7c11a000"
            ]
        ]
    },
    {
        "id": "8e125b71de7e8d9a",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 260,
        "wires": [
            [
                "045d670617a3927f"
            ]
        ]
    },
    {
        "id": "d47d72d0efa89966",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "Consultaties",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 80,
        "wires": []
    },
    {
        "id": "d1568b5c30e7a968",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "Specials",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 140,
        "wires": []
    },
    {
        "id": "7810f8e1.33dc3",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set deur, boven",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "{\"relay\":0,\"on\":true}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "{\"relay\": 0,\"on\":false}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 660,
        "wires": [
            [
                "76347eaadd44c2fe",
                "f169806231b49900"
            ]
        ]
    },
    {
        "id": "36e06774.d6558",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "straatlamp in",
        "links": [
            "df4778f9.862a9",
            "959c576d.3ff368",
            "960f1791.6227d8",
            "6a8411ce.7eb94",
            "472d53a0bee192c4"
        ],
        "x": 575,
        "y": 780,
        "wires": [
            [
                "84c468d3.76f4b8"
            ]
        ]
    },
    {
        "id": "58f463f9.95ee4c",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "praktijik in",
        "links": [
            "960f1791.6227d8",
            "472d53a0bee192c4"
        ],
        "x": 575,
        "y": 660,
        "wires": [
            [
                "7810f8e1.33dc3",
                "68c7de62fc4d56a7"
            ]
        ]
    },
    {
        "id": "84c468d3.76f4b8",
        "type": "function",
        "z": "eeb0c954.d943d",
        "name": "set straatlamp",
        "func": "let payload =   msg.payload\nlet sun     =   global.get(\"switches.sun_position\")\n\nif ((sun != \"day\" && payload) || !payload)\n    {\n        newMsg = {\"payload\" : {\n            \"relay\": 0,\n            \"on\" : payload\n        }\n    }\n    return newMsg\n} ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 780,
        "wires": [
            [
                "79c32f4147ac5745"
            ]
        ]
    },
    {
        "id": "e121d94a.a91018",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set inkom",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "{\"relay\" : 0,\"on\" : true}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "{\"relay\": 0,\"on\" : false}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 720,
        "wires": [
            [
                "00bd2845c3ba6c13"
            ]
        ]
    },
    {
        "id": "fc0d87bf.ee945",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "beneden in",
        "links": [
            "1b5162ad.0b52ed"
        ],
        "x": 575,
        "y": 720,
        "wires": [
            [
                "e121d94a.a91018"
            ]
        ]
    },
    {
        "id": "79c32f4147ac5745",
        "type": "shelly-switch",
        "z": "eeb0c954.d943d",
        "hostname": "shelly1-F3991B.local",
        "description": "Straatlamp",
        "pollinginterval": "300000",
        "x": 1070,
        "y": 780,
        "wires": [
            [
                "ce93c3d714c6b42f"
            ]
        ]
    },
    {
        "id": "00bd2845c3ba6c13",
        "type": "shelly-switch",
        "z": "eeb0c954.d943d",
        "hostname": "shelly1-76ADEB.local",
        "description": "Beneden",
        "pollinginterval": "300000",
        "x": 1060,
        "y": 720,
        "wires": [
            [
                "77f62f7fc178e4a5"
            ]
        ]
    },
    {
        "id": "bde0ce574993afcb",
        "type": "shelly-switch",
        "z": "eeb0c954.d943d",
        "hostname": "shellyswitch25-76CA13.local",
        "description": "Boven ",
        "pollinginterval": "300000",
        "x": 1050,
        "y": 600,
        "wires": [
            [
                "9afd69f7db153537"
            ]
        ]
    },
    {
        "id": "76347eaadd44c2fe",
        "type": "shelly-switch",
        "z": "eeb0c954.d943d",
        "hostname": "shelly1-F3D414.local",
        "description": "Deurslot",
        "pollinginterval": "300000",
        "x": 1060,
        "y": 660,
        "wires": [
            [
                "cd39465bfd6257c7"
            ]
        ]
    },
    {
        "id": "f169806231b49900",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "switch relay",
        "rules": [
            {
                "t": "set",
                "p": "payload.relay",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 600,
        "wires": [
            [
                "bde0ce574993afcb"
            ]
        ]
    },
    {
        "id": "77f62f7fc178e4a5",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "Beneden",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0].ison",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 720,
        "wires": []
    },
    {
        "id": "cd39465bfd6257c7",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "Deurslot",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0].ison",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 660,
        "wires": []
    },
    {
        "id": "9afd69f7db153537",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "Boven",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[1].ison",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 600,
        "wires": []
    },
    {
        "id": "ce93c3d714c6b42f",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "Straatlamp",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0].ison",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 780,
        "wires": []
    },
    {
        "id": "332873d8e2eb8576",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "Praktijk",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 540,
        "wires": []
    },
    {
        "id": "68c7de62fc4d56a7",
        "type": "switch",
        "z": "eeb0c954.d943d",
        "name": "On",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 540,
        "wires": [
            [
                "2a55e4ed1dd3fb01"
            ]
        ]
    },
    {
        "id": "2a55e4ed1dd3fb01",
        "type": "function",
        "z": "eeb0c954.d943d",
        "name": "set entities",
        "func": "let topic       = msg.topic\nlet lighting    = global.get('lighting')\nlet lights      = lighting.lights\nlet switches    = global.get('switches')\n\nlet entities    = []\n\n\nif(switches.praktijk_agendagestuurd == 'on') {\n    for (const light in lights) {\n        if (lights[light]['name'].includes('Praktijk')) {\n            entities.push(parseInt(light))\n        }\n    }\n}\n\nif (entities.length > 0){\n    msg.topic = entities\n    msg.payload = {onOff: true}\n    return msg\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 540,
        "wires": [
            [
                "332873d8e2eb8576",
                "6f8d93bcc0faf9b6"
            ]
        ]
    },
    {
        "id": "6f8d93bcc0faf9b6",
        "type": "tradfri-light-control",
        "z": "eeb0c954.d943d",
        "gateway": "3a720637.38a402",
        "name": "Praktijk",
        "action": "{}",
        "accessories": [],
        "groups": [],
        "x": 1060,
        "y": 540,
        "wires": []
    },
    {
        "id": "e53221d8.864cd",
        "type": "function",
        "z": "ef737c5d.8fdfe",
        "name": "calc",
        "func": "let lighting    = global.get('lighting')\nlet settings    = lighting.settings\nlet times       = lighting.times\nlet switches    = global.get('switches')\nlet sun         = switches.sun_position\nlet sun_percent = msg.payload.altitudePercent/100\nlet dateNow     = Date.now()\n\nif (sun == 'day'){\n    colorTemperature = (settings.set_max-settings.set_min) * sun_percent + settings.set_min\n    brightness = settings.brightness_max\n} else if (sun == 'night'){\n    colorTemperature = settings.set_min\n    brightness = settings.brightness_min\n} else {\n    if(sun == 'dawn'){\n        periodDuration = times.sunrise - times.dawn\n        periodActual = dateNow - times.dawn\n    } else if (sun == 'dusk') {\n        periodDuration = times.dusk - times.sunset\n        periodActual = times.dusk - dateNow\n    } else {\n        node.error({payload: 'problem in Calc', sun : sun})\n    }\n    brightness = (settings.brightness_max - settings.brightness_min) * periodActual/periodDuration + settings.brightness_min\n    colorTemperature = settings.set_min\n}\ncolorTemperature = 100 - (100 * (colorTemperature - settings.bulb_min)/(settings.bulb_max - settings.bulb_min))\n\nnewMsg = {\n    'payload': {\n        'colorTemperature': parseInt(colorTemperature.toFixed(0)),\n        'brightness': parseInt(brightness.toFixed(0))\n        }\n    }\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 300,
        "wires": [
            [
                "f8c88755.5dcc58"
            ]
        ]
    },
    {
        "id": "b849cdcd.7fe5c",
        "type": "subflow:7535b2d2.99fc5c",
        "z": "ef737c5d.8fdfe",
        "name": "",
        "env": [],
        "x": 920,
        "y": 300,
        "wires": []
    },
    {
        "id": "229c3de4.f3d552",
        "type": "comment",
        "z": "ef737c5d.8fdfe",
        "name": "Manage lights color temperature and brightness",
        "info": "",
        "x": 220,
        "y": 220,
        "wires": []
    },
    {
        "id": "7ec5bf43.163b4",
        "type": "sun-position",
        "z": "ef737c5d.8fdfe",
        "name": "sun %",
        "positionConfig": "7b789b02.b3d6e4",
        "rules": [],
        "onlyOnChange": "true",
        "topic": "",
        "outputs": 1,
        "start": "",
        "startType": "none",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "end": "",
        "endType": "none",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "x": 310,
        "y": 300,
        "wires": [
            [
                "e53221d8.864cd"
            ]
        ]
    },
    {
        "id": "2ca65b5f.b4ea04",
        "type": "inject",
        "z": "ef737c5d.8fdfe",
        "name": "lights timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "timer",
        "payload": "true",
        "payloadType": "bool",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "7ec5bf43.163b4"
            ]
        ]
    },
    {
        "id": "f8c88755.5dcc58",
        "type": "function",
        "z": "ef737c5d.8fdfe",
        "name": "set entities",
        "func": "let topic       = msg.topic\nlet lighting    = global.get('lighting')\nlet lights      = lighting.lights\nlet switches    = global.get('switches')\n\nlet entities    = []\nlet entitiesRW  = []\nlet entitiesF   = []\nlet entitiesAll = {}\nlet names       = []\n\nif(switches.bureau_lichtgestuurd == 'on') {\n    for (const light in lights) {\n        if (lights[light]['name'].includes('Bureau') && lights[light]['isOn']) {\n            entities.push(parseInt(light))\n            entitiesRW.push(parseInt(light))\n            names.push(lights[light]['name'])\n        }\n    }\n}\n\nif(switches.felix_lichtgestuurd == 'on'){\n    for (const light in lights) {\n        if (lights[light]['name'].includes('Felix') && lights[light]['isOn']) {\n           entities.push(parseInt(light))\n           entitiesF.push(parseInt(light))\n           names.push(lights[light]['name'])\n        }\n    }\n}\n\nentitiesAll = {\n    entitiesRW : entitiesRW,\n    entitiesF : entitiesF\n}\n\nif (entities.length > 0){\n    msg.topic = entities\n    msg.names = names\n    msg.entitiesAll = entitiesAll\n    return msg\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 300,
        "wires": [
            [
                "d982241b.ffa208",
                "b849cdcd.7fe5c",
                "a09f1f3b66defb01"
            ]
        ]
    },
    {
        "id": "d982241b.ffa208",
        "type": "debug",
        "z": "ef737c5d.8fdfe",
        "name": "entities payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 360,
        "wires": []
    },
    {
        "id": "a09f1f3b66defb01",
        "type": "debug",
        "z": "ef737c5d.8fdfe",
        "name": "entities names",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 420,
        "wires": []
    },
    {
        "id": "340b392b64f4cd92",
        "type": "comment",
        "z": "ef737c5d.8fdfe",
        "name": "IKEA lights",
        "info": "",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "bc355bf81279e6d8",
        "type": "tradfri-monitor",
        "z": "ef737c5d.8fdfe",
        "gateway": "3a720637.38a402",
        "name": "Tradfri Rodeweg",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "8d80ed1299f0421c"
            ]
        ]
    },
    {
        "id": "8d80ed1299f0421c",
        "type": "function",
        "z": "ef737c5d.8fdfe",
        "name": "set monitored states",
        "func": "if (msg.payload.type != 'lightbulb') return\nif(!msg.payload.alive) return {payload: msg.payload.name + ' not alive'}\n\nlet lighting = global.get('lighting')||{}\nif(!lighting.lights) lighting.lights = {}\nlet lights = lighting.lights\n\nlet payload = msg.payload\nlet name = payload.name\nlet isOn = payload.lightbulb.isOn\nlet id = payload.instanceId\n\nvar set = false\nif (lights.hasOwnProperty(id)) {\n    if(lights[id]['isOn'] != isOn) {\n        set = true\n    }\n} else {\n    set = true\n}\n\nif(set) {\n    lighting['lights'][id] = {\n        \"isOn\": isOn,\n        \"name\": name\n    }\n    global.set('lighting', lighting)\n\n    return {\n        payload: name + ' (' + isOn + ')'\n    }\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 100,
        "wires": [
            [
                "9004f0597913e647",
                "d530536dd765892b"
            ]
        ]
    },
    {
        "id": "d530536dd765892b",
        "type": "switch",
        "z": "ef737c5d.8fdfe",
        "name": "filter: (true)",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "(true)",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 160,
        "wires": [
            [
                "d99375d0610c55b3"
            ]
        ]
    },
    {
        "id": "9004f0597913e647",
        "type": "debug",
        "z": "ef737c5d.8fdfe",
        "name": "set monitored states",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 100,
        "wires": []
    },
    {
        "id": "d99375d0610c55b3",
        "type": "join",
        "z": "ef737c5d.8fdfe",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 770,
        "y": 160,
        "wires": [
            [
                "9dbd8fba6c17f8b8"
            ]
        ]
    },
    {
        "id": "9dbd8fba6c17f8b8",
        "type": "change",
        "z": "ef737c5d.8fdfe",
        "name": "set payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "switches.restart_lights",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 160,
        "wires": [
            [
                "7ec5bf43.163b4"
            ]
        ]
    },
    {
        "id": "e8d02cba847d5740",
        "type": "link in",
        "z": "ef737c5d.8fdfe",
        "name": "Lichtsturing",
        "links": [
            "66057579505151f3",
            "8218126c12e4d8a2"
        ],
        "x": 175,
        "y": 360,
        "wires": [
            [
                "7ec5bf43.163b4"
            ]
        ]
    },
    {
        "id": "18f48d3f47284108",
        "type": "tradfri-monitor",
        "z": "ef737c5d.8fdfe",
        "gateway": "117d334b145a0072",
        "name": "Tradfri Felix",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "8d80ed1299f0421c"
            ]
        ]
    },
    {
        "id": "3b2aad13.91b0a2",
        "type": "comment",
        "z": "b798ba0e.5afac8",
        "name": "inkom, straatlamp uit om 23:59",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "3019eb30.7e9084",
        "type": "inject",
        "z": "b798ba0e.5afac8",
        "name": "Schakelaar",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "59 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"relay\":0,\"on\":false}",
        "payloadType": "json",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "171cf7f2a7932d8a",
                "46a54e831354560a"
            ]
        ]
    },
    {
        "id": "fc1658fa.e1f1a8",
        "type": "inject",
        "z": "b798ba0e.5afac8",
        "name": "08:00",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 08 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 100,
        "y": 220,
        "wires": [
            [
                "a94048ec.49bee8"
            ]
        ]
    },
    {
        "id": "f11f1529.85d2a8",
        "type": "debug",
        "z": "b798ba0e.5afac8",
        "name": "Opstaan gedaan?",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "a94048ec.49bee8",
        "type": "function",
        "z": "b798ba0e.5afac8",
        "name": "data",
        "func": "let switches            = global.get('switches')\nlet lighting            = global.get('lighting')\nlet lights              = lighting.lights\nlet settings            = lighting.settings\n\nlet brightness          = settings.brightness_min\nlet colorTemperature    = settings.set_min\nlet entities = []\n\nif (switches.felix_ontwaaklicht == 'on') {\n    for (const light in lights) {\n        let temp = lights[light]['name']\n         if (temp.includes('Felix') && temp.includes('lamp')) {\n           entities.push(parseInt(light))\n        }\n    }\n}\n\nif (entities.length > 0) {  \n    newMsg = {\n        'topic' : entities,\n        'payload': {\n            colorTemperature: colorTemperature,\n            brightness: brightness,\n            transition: 10\n            }\n        }\n    return newMsg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "f11f1529.85d2a8",
                "6a6fe1bad5cb96b6"
            ]
        ]
    },
    {
        "id": "171cf7f2a7932d8a",
        "type": "link out",
        "z": "b798ba0e.5afac8",
        "name": "Shelly om 23:59",
        "links": [
            "6315b4d8c9634e59"
        ],
        "x": 315,
        "y": 140,
        "wires": []
    },
    {
        "id": "6a6fe1bad5cb96b6",
        "type": "subflow:7535b2d2.99fc5c",
        "z": "b798ba0e.5afac8",
        "name": "",
        "x": 540,
        "y": 220,
        "wires": []
    },
    {
        "id": "88041695d73b27b2",
        "type": "comment",
        "z": "b798ba0e.5afac8",
        "name": "felix ontwaken om 07:00 uur",
        "info": "",
        "x": 140,
        "y": 160,
        "wires": []
    },
    {
        "id": "b6fcec1d94b1525f",
        "type": "tradfri-light-control",
        "z": "b798ba0e.5afac8",
        "gateway": "3a720637.38a402",
        "name": "Praktijk",
        "action": "{}",
        "accessories": [
            ""
        ],
        "groups": [
            ""
        ],
        "x": 540,
        "y": 80,
        "wires": []
    },
    {
        "id": "c02b8097e0b70dfa",
        "type": "controltimer",
        "z": "b798ba0e.5afac8",
        "name": "",
        "timerType": "delay",
        "timerDurationUnit": "minute",
        "timerDurationType": "num",
        "timerDuration": 15,
        "timerLoopTimeoutUnit": "second",
        "timerLoopTimeoutType": "num",
        "timerLoopTimeout": 0,
        "loopTimeoutMessageType": "str",
        "loopTimeoutMessage": "LOOP_TIMEOUT",
        "timerMaxLoopIterationsType": "num",
        "timerMaxLoopIterations": 0,
        "loopMaxIterationsMessageType": "str",
        "loopMaxIterationsMessage": "MAX_LOOP_ITERATIONS",
        "isConsecutiveStartActionTimerResetAllowed": true,
        "isRunningTimerProgressVisible": true,
        "outputReceivedMessageOnTimerTrigger": true,
        "outputReceivedMessageOnTimerHalt": true,
        "startTimerOnReceivalOfUnknownMessage": false,
        "resetTimerOnReceivalOfUnknownMessage": false,
        "isDebugModeEnabled": false,
        "timerTriggeredMessageType": "str",
        "timerTriggeredMessage": "TIMER_TRIGGERED",
        "timerHaltedMessageType": "str",
        "timerHaltedMessage": "TIMER_HALTED",
        "isStartActionEnabled": true,
        "isStopActionEnabled": false,
        "isResetActionEnabled": false,
        "isPauseActionEnabled": false,
        "isContinueActionEnabled": false,
        "actionPropertyNameType": "str",
        "actionPropertyName": "payload",
        "startActionNameType": "str",
        "startActionName": "START",
        "stopActionNameType": "str",
        "stopActionName": "STOP",
        "resetActionNameType": "str",
        "resetActionName": "RESET",
        "pauseActionNameType": "str",
        "pauseActionName": "PAUSE",
        "continueActionNameType": "str",
        "continueActionName": "CONTINUE",
        "x": 580,
        "y": 620,
        "wires": [
            [
                "f087c13023d174e4"
            ],
            []
        ]
    },
    {
        "id": "1b760319ddee3c3c",
        "type": "switch",
        "z": "b798ba0e.5afac8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 500,
        "wires": [
            [
                "c19a00a015eea7c6",
                "d5fbba0957479bda"
            ]
        ]
    },
    {
        "id": "c19a00a015eea7c6",
        "type": "change",
        "z": "b798ba0e.5afac8",
        "name": "START",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "START",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 620,
        "wires": [
            [
                "c02b8097e0b70dfa"
            ]
        ]
    },
    {
        "id": "d5fbba0957479bda",
        "type": "change",
        "z": "b798ba0e.5afac8",
        "name": "onOff: true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"onOff\" : true}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 500,
        "wires": [
            [
                "ad5444e4b39970ed"
            ]
        ]
    },
    {
        "id": "f087c13023d174e4",
        "type": "change",
        "z": "b798ba0e.5afac8",
        "name": "onOff: false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"onOff\" : false}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 560,
        "wires": [
            [
                "ad5444e4b39970ed"
            ]
        ]
    },
    {
        "id": "889e5fac89883990",
        "type": "tradfri-light-control",
        "z": "b798ba0e.5afac8",
        "gateway": "3a720637.38a402",
        "name": "Bureau",
        "action": "{}",
        "accessories": [],
        "groups": [],
        "x": 920,
        "y": 500,
        "wires": []
    },
    {
        "id": "ad5444e4b39970ed",
        "type": "function",
        "z": "b798ba0e.5afac8",
        "name": "set entities",
        "func": "let topic       = msg.topic\nlet lighting    = global.get('lighting')\nlet lights      = lighting.lights\nlet switches    = global.get('switches')\n\nlet entities    = []\n\n\nif(switches.bureau_lichtgestuurd == 'on') {\n    for (const light in lights) {\n        if (lights[light]['name'].includes('Bureau')) {\n            entities.push(parseInt(light))\n        }\n    }\n}\n\nif (entities.length > 0){\n    msg.topic = entities\n    return msg\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 500,
        "wires": [
            [
                "889e5fac89883990",
                "8a91d24af12764d5"
            ]
        ]
    },
    {
        "id": "46a54e831354560a",
        "type": "function",
        "z": "b798ba0e.5afac8",
        "name": "set entities",
        "func": "let topic       = msg.topic\nlet lighting    = global.get('lighting')\nlet lights      = lighting.lights\nlet switches    = global.get('switches')\n\nlet entities    = []\n\n\nif(switches.praktijk_agendagestuurd == 'on') {\n    for (const light in lights) {\n        if (lights[light]['name'].includes('Praktijk')) {\n            entities.push(parseInt(light))\n        }\n    }\n    if (entities.length > 0){\n        msg.topic = entities\n        msg.payload = {onOff: false}\n        return msg\n    }\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 80,
        "wires": [
            [
                "b6fcec1d94b1525f",
                "9dfed8264b67b348"
            ]
        ]
    },
    {
        "id": "c3b58990b5a05f1b",
        "type": "rpi-gpio in",
        "z": "b798ba0e.5afac8",
        "name": "Beweging",
        "pin": "4",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 100,
        "y": 500,
        "wires": [
            [
                "1b760319ddee3c3c"
            ]
        ]
    },
    {
        "id": "9dfed8264b67b348",
        "type": "debug",
        "z": "b798ba0e.5afac8",
        "name": "Praktijk om middernacht",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 140,
        "wires": []
    },
    {
        "id": "4470c5a21720e20c",
        "type": "function",
        "z": "b798ba0e.5afac8",
        "g": "c6c28fc3c88e18f3",
        "name": "set agenda",
        "func": "let voorloop = 30\nlet uitloop = 60\nlet praktijk = global.get(\"praktijk\") || {}\nlet blokken_agenda = []\nlet blok_inkom = {}\n\n// get calendar events, take out all-day events\nevents = msg.payload.filter(function(event) {\n    return event.allDay !== true\n})\n\nif (events.length > 0){\n    // take out irrelevant properties\n    events = events.map(({eventStart, eventEnd}) => ({eventStart, eventEnd}))\n    // insert voorloop and uitloop\n    events.forEach(function(item, index) {\n        events[index].eventStart.setMinutes(item.eventStart.getMinutes() - voorloop)\n        events[index].eventEnd.setMinutes(item.eventEnd.getMinutes() + uitloop)\n    });\n    blok_inkom.start = events[0].eventStart\n    blok_inkom.end   = events[events.length - 1].eventEnd\n\n    eventStart       = events[0].eventStart\n    eventEnd         = events[0].eventEnd\n    events.forEach(function(event) {\n        if (event.eventStart > eventEnd) {\n            blokken_agenda.push({start: eventStart, end: eventEnd})\n            eventStart = event.eventStart\n        }\n        eventEnd = event.eventEnd\n    });\n    blokken_agenda.push({start: eventStart, end: eventEnd})\n\n    // take out expired events\n    now = new Date()\n    blokken_agenda = blokken_agenda.filter(function(blok){\n        return blok.end > now\n    })\n}\n\npraktijk.blokken_agenda = blokken_agenda\npraktijk.blok_inkom = blok_inkom\nglobal.set(\"praktijk\", praktijk)\n\nreturn {payload: true}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7e4881a932abecf2",
        "type": "function",
        "z": "b798ba0e.5afac8",
        "g": "c6c28fc3c88e18f3",
        "name": "next",
        "func": "let payload =           msg.payload\nlet praktijk =          global.get(\"praktijk\") || {}\nlet blokken_agenda =    praktijk.blokken_agenda || []\nlet blok_agenda =       praktijk.blok_agenda || []\nlet blok_inkom =        praktijk.blok_inkom || {}\n\nlet now = new Date()\nif(payload == 'on' || (payload == \"off\" && blok_agenda.end > now)) return null\n\nlet start   =   now.setHours(0,0,0)\nlet end     =   new Date(start).setHours(0,1,0)\nlet noBlock = {\n    start:      start,\n    end:        end,\n    startTime:  new Date(start),\n    endTime:    new Date(end)\n}\n\nif(blokken_agenda.length > 0){\n    temp = blokken_agenda.shift()\n    blok_agenda = {\n        start:      new Date(temp.start).getTime(),\n        end:        new Date(temp.end).getTime(),\n        startTime:  temp.start,\n        endTime:    temp.end\n    }\n    msg = {payload: {\n        blok_agenda  : blok_agenda,\n        blokken_agenda : blokken_agenda\n        }\n    }\n} else {\n    blok_agenda = noBlock\n    msg = {payload: \"geen consultaties\"}\n}\nif(blok_inkom.hasOwnProperty('start')){\n    blok_inkom.startTime =   blok_inkom.start\n    blok_inkom.endTime =     blok_inkom.end\n    blok_inkom.start =       new Date(blok_inkom.startTime).getTime()\n    blok_inkom.end =         new Date(blok_inkom.endTime).getTime()\n} else {\n    blok_inkom = noBlock\n}\npraktijk.blokken_agenda = blokken_agenda\npraktijk.blok_agenda = blok_agenda\npraktijk.blok_inkom = blok_inkom\nglobal.set(\"praktijk\",praktijk)\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7d20fc15db9a8658",
        "type": "function",
        "z": "b798ba0e.5afac8",
        "g": "9e6e1d597596576f",
        "name": "set specials",
        "func": "let voorloop = 0\nlet uitloop = 0\nlet praktijk = global.get(\"praktijk\") || {}\nlet blokken_special = []\n\n// get calendar events, take out all-day events\nevents = msg.payload.filter(function(event) {\n    return event.allDay !== true\n});\n\nif (events.length > 0){\n    // take out irrelevant properties\n    events = events.map(({eventStart, eventEnd}) => ({eventStart, eventEnd}))\n\n    eventStart = events[0].eventStart\n    eventEnd   = events[0].eventEnd\n    events.forEach(function(event) {\n        if (event.eventStart > eventEnd) {\n            blokken_special.push({start: eventStart, end: eventEnd})\n            eventStart = event.eventStart\n        }\n        eventEnd = event.eventEnd\n    });\n    blokken_special.push({start: eventStart, end: eventEnd})\n\n    // take out expired events\n    now = new Date()\n    blokken_special = blokken_special.filter(function(special){\n        return special.end > now\n    })\n}\n\npraktijk.blokken_special = blokken_special\nglobal.set(\"praktijk\", praktijk)\n\nreturn {payload: true}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2e2c9b336848af0c",
        "type": "function",
        "z": "b798ba0e.5afac8",
        "g": "9e6e1d597596576f",
        "name": "next",
        "func": "let payload         = msg.payload\nlet praktijk        = global.get(\"praktijk\") || {}\n\nlet blokken_special = praktijk.blokken_special || []\nlet blok_special    = praktijk.blok_special\n\nlet now = new Date()\nif(payload == 'on' || (payload == 'off' && blok_special.end > now)) return null\n\nif(blokken_special.length > 0){\n    temp = blokken_special.shift()\n\n    blok_special = {\n        start:      new Date(temp.start).getTime(),\n        end:        new Date(temp.end).getTime(),\n        startTime:  temp.start,\n        endTime:    temp.end\n    }\n    msg = {payload: {\n        blok_special  :     blok_special,\n        blokken_special :   blokken_special\n        }\n    }\n} else {\n    start =         new Date().setHours(0,0,0)\n    startTime =     new Date(start)\n    end =           new Date(start).setHours(0,1,0)\n    endTime =       new Date(end)\n    blok_special = {\n        start:      start,\n        end:        end,\n        startTime:  startTime,\n        endTime:    endTime\n    }\n    msg = {payload: \"geen speciallekes\"}\n}\n\npraktijk.blokken_special    = blokken_special\npraktijk.blok_special       = blok_special\nglobal.set(\"praktijk\",praktijk)\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8a91d24af12764d5",
        "type": "debug",
        "z": "b798ba0e.5afac8",
        "name": "Bureau sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 560,
        "wires": []
    },
    {
        "id": "ab79988be2241e31",
        "type": "homekit-service",
        "z": "ac61d6b63edc7d80",
        "g": "adb7c77aee928dbb",
        "isParent": true,
        "hostType": "0",
        "bridge": "409001a1.3e7a78",
        "accessoryId": "",
        "parentService": "",
        "name": "Bureau Lichtsturing",
        "serviceName": "Switch",
        "topic": "",
        "filter": false,
        "manufacturer": "NRCHKB",
        "model": "0.120.5",
        "serialNo": "Default Serial Number",
        "firmwareRev": "0.120.5",
        "hardwareRev": "0.120.5",
        "softwareRev": "0.120.5",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 370,
        "y": 100,
        "wires": [
            [],
            [
                "168005e3096ff9f4",
                "7e39b941a8e2ea20"
            ]
        ]
    },
    {
        "id": "cf158bd224a84ae4",
        "type": "inject",
        "z": "ac61d6b63edc7d80",
        "g": "a88344fd46a1a258",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"On\":true}",
        "payloadType": "json",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "ab79988be2241e31"
            ]
        ]
    },
    {
        "id": "200e97d616d139f2",
        "type": "inject",
        "z": "ac61d6b63edc7d80",
        "g": "a88344fd46a1a258",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"On\":false}",
        "payloadType": "json",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "ab79988be2241e31"
            ]
        ]
    },
    {
        "id": "120e953ab7375f77",
        "type": "debug",
        "z": "ac61d6b63edc7d80",
        "g": "575b777b8d0ef00f",
        "name": "Homekit Switches",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 400,
        "wires": []
    },
    {
        "id": "4c15d28aac408723",
        "type": "inject",
        "z": "ac61d6b63edc7d80",
        "g": "5f38f820d8f596b6",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"On\":true}",
        "payloadType": "json",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "011a13273f3a770e"
            ]
        ]
    },
    {
        "id": "de23e2e4d966a81d",
        "type": "inject",
        "z": "ac61d6b63edc7d80",
        "g": "5f38f820d8f596b6",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"On\":false}",
        "payloadType": "json",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "011a13273f3a770e"
            ]
        ]
    },
    {
        "id": "011a13273f3a770e",
        "type": "homekit-service",
        "z": "ac61d6b63edc7d80",
        "g": "000c7f2afbe57624",
        "isParent": true,
        "hostType": "0",
        "bridge": "409001a1.3e7a78",
        "accessoryId": "",
        "parentService": "",
        "name": "Felix Lichtsturing",
        "serviceName": "Switch",
        "topic": "",
        "filter": false,
        "manufacturer": "NRCHKB",
        "model": "0.120.5",
        "serialNo": "Default Serial Number",
        "firmwareRev": "0.120.5",
        "hardwareRev": "0.120.5",
        "softwareRev": "0.120.5",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 370,
        "y": 260,
        "wires": [
            [],
            [
                "55d857d8c1498330",
                "7e39b941a8e2ea20"
            ]
        ]
    },
    {
        "id": "948aff05f39477c4",
        "type": "inject",
        "z": "ac61d6b63edc7d80",
        "g": "006589780663fc45",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"On\":true}",
        "payloadType": "json",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "f6b0fb33851499cd"
            ]
        ]
    },
    {
        "id": "0de4b20b1f6c9191",
        "type": "inject",
        "z": "ac61d6b63edc7d80",
        "g": "006589780663fc45",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"On\":false}",
        "payloadType": "json",
        "x": 150,
        "y": 580,
        "wires": [
            [
                "f6b0fb33851499cd"
            ]
        ]
    },
    {
        "id": "f6b0fb33851499cd",
        "type": "homekit-service",
        "z": "ac61d6b63edc7d80",
        "g": "cec0b675c632c86d",
        "isParent": true,
        "hostType": "0",
        "bridge": "409001a1.3e7a78",
        "accessoryId": "",
        "parentService": "",
        "name": "Praktijk Agendagestuurd",
        "serviceName": "Switch",
        "topic": "",
        "filter": false,
        "manufacturer": "NRCHKB",
        "model": "0.120.5",
        "serialNo": "Default Serial Number",
        "firmwareRev": "0.120.5",
        "hardwareRev": "0.120.5",
        "softwareRev": "0.120.5",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 390,
        "y": 560,
        "wires": [
            [],
            [
                "25ae4a047a959d21",
                "66b9bcdc3b484352"
            ]
        ]
    },
    {
        "id": "168005e3096ff9f4",
        "type": "change",
        "z": "ac61d6b63edc7d80",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "switches.bureau_lichtgestuurd",
                "pt": "global",
                "to": "msg.payload.On ? \"on\" : \"off\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "switches",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 120,
        "wires": [
            [
                "df918f0df9bffdd1"
            ]
        ]
    },
    {
        "id": "55d857d8c1498330",
        "type": "change",
        "z": "ac61d6b63edc7d80",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "switches.felix_lichtgestuurd",
                "pt": "global",
                "to": "msg.payload.On ? \"on\" : \"off\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "switches",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 260,
        "wires": [
            [
                "df918f0df9bffdd1"
            ]
        ]
    },
    {
        "id": "25ae4a047a959d21",
        "type": "change",
        "z": "ac61d6b63edc7d80",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "switches.praktijk_agendagestuurd",
                "pt": "global",
                "to": "msg.payload.On ? \"on\" : \"off\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "switches",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 540,
        "wires": [
            [
                "df918f0df9bffdd1"
            ]
        ]
    },
    {
        "id": "e8a055cf20de777b",
        "type": "function",
        "z": "ac61d6b63edc7d80",
        "name": "Set up inputs",
        "func": "let msg0 = msg1 = msg2 = msg3 = {}\nlet switches = global.get('switches')\n\nmsg0.payload = {\n \"On\": switches.bureau_lichtgestuurd == 'on' ? true : false\n}\n\nmsg1.payload = {\n \"On\": switches.felix_lichtgestuurd  == 'on'? true : false\n}\n\nmsg2.payload = {\n \"On\": switches.felix_ontwaaklicht == 'on' ? true : false\n}\n\nmsg3.payload = {\n \"On\": switches.praktijk_agendagestuurd == 'on'  ? true : false\n}\n\nreturn [msg0,msg1,msg2,msg3];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 680,
        "wires": [
            [
                "ab79988be2241e31"
            ],
            [
                "011a13273f3a770e"
            ],
            [
                "5d3b03dbb4ea9801"
            ],
            [
                "f6b0fb33851499cd"
            ]
        ]
    },
    {
        "id": "5d3b03dbb4ea9801",
        "type": "homekit-service",
        "z": "ac61d6b63edc7d80",
        "g": "e6b5b236f3e727ec",
        "isParent": true,
        "hostType": "0",
        "bridge": "409001a1.3e7a78",
        "accessoryId": "",
        "parentService": "",
        "name": "Felix Ontwaaklicht",
        "serviceName": "Switch",
        "topic": "",
        "filter": false,
        "manufacturer": "NRCHKB",
        "model": "0.120.5",
        "serialNo": "Default Serial Number",
        "firmwareRev": "0.120.5",
        "hardwareRev": "0.120.5",
        "softwareRev": "0.120.5",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 370,
        "y": 420,
        "wires": [
            [],
            [
                "bfe5188c7ae49ac3"
            ]
        ]
    },
    {
        "id": "44d7180ceef89150",
        "type": "inject",
        "z": "ac61d6b63edc7d80",
        "g": "9c9496ec1aad230d",
        "name": "On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"On\":true}",
        "payloadType": "json",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "5d3b03dbb4ea9801"
            ]
        ]
    },
    {
        "id": "9a0d28d3bce71307",
        "type": "inject",
        "z": "ac61d6b63edc7d80",
        "g": "9c9496ec1aad230d",
        "name": "Off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"On\":false}",
        "payloadType": "json",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "5d3b03dbb4ea9801"
            ]
        ]
    },
    {
        "id": "81e7b1fb1a861ff5",
        "type": "inject",
        "z": "ac61d6b63edc7d80",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "e8a055cf20de777b"
            ]
        ]
    },
    {
        "id": "7e39b941a8e2ea20",
        "type": "switch",
        "z": "ac61d6b63edc7d80",
        "name": "filter: true",
        "property": "payload.On",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 180,
        "wires": [
            [
                "1dfdf78ca5273b89"
            ]
        ]
    },
    {
        "id": "66057579505151f3",
        "type": "link out",
        "z": "ac61d6b63edc7d80",
        "name": "Lichtsturing",
        "links": [
            "e8d02cba847d5740"
        ],
        "x": 875,
        "y": 180,
        "wires": []
    },
    {
        "id": "66b9bcdc3b484352",
        "type": "switch",
        "z": "ac61d6b63edc7d80",
        "name": "filter: true",
        "property": "payload.On",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 600,
        "wires": [
            [
                "4bf8966822ea0cf5"
            ]
        ]
    },
    {
        "id": "4bf8966822ea0cf5",
        "type": "link out",
        "z": "ac61d6b63edc7d80",
        "name": "Agendasturing",
        "links": [
            "950b4130.80c738"
        ],
        "x": 795,
        "y": 600,
        "wires": []
    },
    {
        "id": "df918f0df9bffdd1",
        "type": "rbe",
        "z": "ac61d6b63edc7d80",
        "g": "575b777b8d0ef00f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 830,
        "y": 340,
        "wires": [
            [
                "120e953ab7375f77"
            ]
        ]
    },
    {
        "id": "1dfdf78ca5273b89",
        "type": "change",
        "z": "ac61d6b63edc7d80",
        "name": "restart",
        "rules": [
            {
                "t": "set",
                "p": "switches.restart_lights",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 180,
        "wires": [
            [
                "66057579505151f3"
            ]
        ]
    },
    {
        "id": "bfe5188c7ae49ac3",
        "type": "change",
        "z": "ac61d6b63edc7d80",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "switches.felix_ontwaaklicht",
                "pt": "global",
                "to": "msg.payload.On ? \"on\" : \"off\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "switches",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 420,
        "wires": [
            [
                "df918f0df9bffdd1"
            ]
        ]
    },
    {
        "id": "aaf325d434fd94f3",
        "type": "shelly-switch",
        "z": "8de679a753371272",
        "hostname": "shelly1-F3991B.local",
        "description": "Straatlamp",
        "pollinginterval": "300000",
        "x": 450,
        "y": 40,
        "wires": [
            [
                "bbae895adf1e9bd1"
            ]
        ]
    },
    {
        "id": "f5f6d01a1050d12f",
        "type": "inject",
        "z": "8de679a753371272",
        "name": "on",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"relay\":0,\"on\":true}",
        "payloadType": "json",
        "x": 110,
        "y": 40,
        "wires": [
            [
                "aaf325d434fd94f3",
                "de73fa271d465d26",
                "f654bef688a9421d",
                "5821e7969399d27a"
            ]
        ]
    },
    {
        "id": "feafab5a87824869",
        "type": "inject",
        "z": "8de679a753371272",
        "name": "off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"relay\":0,\"on\":false}",
        "payloadType": "json",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "aaf325d434fd94f3",
                "de73fa271d465d26",
                "f654bef688a9421d",
                "5821e7969399d27a"
            ]
        ]
    },
    {
        "id": "bbae895adf1e9bd1",
        "type": "debug",
        "z": "8de679a753371272",
        "name": "Straatlamp out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0].ison",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 40,
        "wires": []
    },
    {
        "id": "de73fa271d465d26",
        "type": "shelly-switch",
        "z": "8de679a753371272",
        "hostname": "shelly1-76ADEB.local",
        "description": "Beneden",
        "pollinginterval": "300000",
        "x": 440,
        "y": 100,
        "wires": [
            [
                "4dbb1c627a77801f"
            ]
        ]
    },
    {
        "id": "bd83863e51e72a76",
        "type": "shelly-switch",
        "z": "8de679a753371272",
        "hostname": "shellyswitch25-76CA13.local",
        "description": "Boven ",
        "pollinginterval": "300000",
        "x": 430,
        "y": 160,
        "wires": [
            [
                "51008eef2dea5055"
            ]
        ]
    },
    {
        "id": "f654bef688a9421d",
        "type": "shelly-switch",
        "z": "8de679a753371272",
        "hostname": "shelly1-F3D414.local",
        "description": "Deurslot",
        "pollinginterval": "300000",
        "x": 440,
        "y": 220,
        "wires": [
            [
                "1abf4d2442abeb60"
            ]
        ]
    },
    {
        "id": "4dbb1c627a77801f",
        "type": "debug",
        "z": "8de679a753371272",
        "name": "Beneden out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0].ison",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 100,
        "wires": []
    },
    {
        "id": "1abf4d2442abeb60",
        "type": "debug",
        "z": "8de679a753371272",
        "name": "Deurslot out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0].ison",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 220,
        "wires": []
    },
    {
        "id": "51008eef2dea5055",
        "type": "debug",
        "z": "8de679a753371272",
        "name": "Boven 2 out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[1].ison",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 160,
        "wires": []
    },
    {
        "id": "5821e7969399d27a",
        "type": "change",
        "z": "8de679a753371272",
        "name": "Switch relay",
        "rules": [
            {
                "t": "set",
                "p": "payload.relay",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "bd83863e51e72a76"
            ]
        ]
    },
    {
        "id": "6315b4d8c9634e59",
        "type": "link in",
        "z": "8de679a753371272",
        "name": "Shelly om 23:59",
        "links": [
            "171cf7f2a7932d8a"
        ],
        "x": 175,
        "y": 220,
        "wires": [
            [
                "5821e7969399d27a",
                "f654bef688a9421d",
                "de73fa271d465d26",
                "aaf325d434fd94f3"
            ]
        ]
    }
]